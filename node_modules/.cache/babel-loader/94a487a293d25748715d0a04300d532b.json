{"ast":null,"code":"import _regeneratorRuntime from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tingyuan.lu/weather-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tingyuan.lu/weather-app/src/App.js\";\nimport React, { Component } from 'react';\nimport Title from \"./components/Title\";\nimport Form from \"./components/Form\";\nimport Weather from \"./components/Weather\";\nvar API_KEY = \"c397546bedbab8c7f0889eced4686172\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      temperature: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      error: undefined\n    };\n\n    _this.getWeather =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var city, country, api_call, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                city = e.target.elements.city.value;\n                country = e.target.elements.country.value;\n                _context.next = 5;\n                return fetch(\"https://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n\n              case 5:\n                api_call = _context.sent;\n                console.log(api_call);\n                _context.next = 9;\n                return api_call.json();\n\n              case 9:\n                data = _context.sent;\n\n                if (city && country) {\n                  console.log(data);\n\n                  _this.setState({\n                    temperature: data.main.temp,\n                    city: data.name,\n                    country: data.sys.country,\n                    humidity: data.main.humidity,\n                    description: data.weather[0].description,\n                    error: \"\"\n                  });\n                } else {\n                  _this.setState({\n                    temperature: undefined,\n                    city: undefined,\n                    country: undefined,\n                    humidity: undefined,\n                    description: undefined,\n                    icon: undefined,\n                    error: \"Please enter the value\"\n                  });\n                }\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Title, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(Form, {\n        getWeather: this.getWeather,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Weather, {\n        temperature: this.state.temperature,\n        city: this.state.city,\n        country: this.state.country,\n        humidity: this.state.humidity,\n        description: this.state.description,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tingyuan.lu/weather-app/src/App.js"],"names":["React","Component","Title","Form","Weather","API_KEY","App","state","temperature","undefined","city","country","humidity","description","error","getWeather","e","preventDefault","target","elements","value","fetch","api_call","console","log","json","data","setState","main","temp","name","sys","weather","icon"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Title from \"./components/Title\"\nimport Form from \"./components/Form\"\nimport Weather from \"./components/Weather\"\n\nconst API_KEY=\"c397546bedbab8c7f0889eced4686172\"\n\n\nclass App extends Component {\n  state={\n    temperature:undefined,\n    city:undefined,\n    country:undefined,\n    humidity:undefined,\n    description:undefined,\n    error:undefined\n  }\n  getWeather=async(e)=>{\n    e.preventDefault();\n    const city=e.target.elements.city.value;\n    const country=e.target.elements.country.value;\n    const api_call = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`)\n    console.log(api_call);\n    const data= await api_call.json();\n    if(city&&country){\n      console.log(data);\n        this.setState({\n          temperature:data.main.temp,\n          city:data.name,\n          country:data.sys.country,\n          humidity:data.main.humidity,\n          description:data.weather[0].description,\n          error:\"\"\n        });\n    }else{\n      this.setState({\n        temperature:undefined,\n        city:undefined,\n        country:undefined,\n        humidity:undefined,\n        description:undefined,\n        icon:undefined,\n        error:\"Please enter the value\"\n      });\n    }\n  }\n  render() {\n     return(\n       <div>\n        <Title/>\n        <Form getWeather={this.getWeather}/>\n        <Weather\n         temperature={this.state.temperature}\n         city={this.state.city}\n         country={this.state.country}\n         humidity={this.state.humidity}\n         description={this.state.description}\n         error={this.state.error}\n\n         />\n       </div>\n     );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}